0. Ner言語の作成
0.0 構文解析器を実装
0.1 型チェッカを実装 <- いまここ
0.2 擬停止性チェッカを実装

1. Tractライブラリの作成
1.0 関数・型などの環境を実装
1.1 LLVMコード生成を実装

2. DAWの作成
2.0 Tractライブラリを用いてOpenGLやウインドウや音声入出力をラップ(IOLib)
2.1 IOLibでDAWを実装

3. 曲を作る

Reflection System

data Def : Type -> Type where
    Def : 'K -> 'V -> (k:K) -> (v:V) -> Def K

data Typing : Type -> Type where
    Typing : 'K -> 'S -> (k:K) -> (T:S) -> Typing K

data DataType : Type -> Type where
    DataType : 'K -> 

data Module : Type -> Type where
    Empty : 'K -> Module K
    AddDef : 'K -> Module K -> Def K -> Module K
    AddTyping : 'K -> Module K -> Typing K -> Module K
    AddDataType : 'K -> Module K -> DataType K -> Module K